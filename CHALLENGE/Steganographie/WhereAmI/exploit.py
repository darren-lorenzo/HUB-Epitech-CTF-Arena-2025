from pydub import AudioSegment
import struct

# Fonction pour extraire les bits du message caché dans l'audio
def extract_message_from_audio(audio_file):
    # Charger le fichier audio
    audio = AudioSegment.from_wav(audio_file)
    audio_samples = list(audio.get_array_of_samples())
    
    # Variable pour stocker les bits extraits
    extracted_bits = ''
    
    # Extraire les LSB de chaque échantillon audio
    for sample in audio_samples:
        # Récupérer le LSB (le dernier bit) de chaque échantillon
        extracted_bits += str(sample & 1)
        
        # Vérifier si on a atteint la fin du message (le délimiteur 1111111111111110)
        if len(extracted_bits) >= 16 and extracted_bits[-16:] == '1111111111111110':
            break
    
    # Enlever le délimiteur (16 derniers bits) du message
    extracted_bits = extracted_bits[:-16]

    # Décoder les bits extraits en texte
    decoded_message = ''
    for i in range(0, len(extracted_bits), 8):
        byte = extracted_bits[i:i+8]
        decoded_message += chr(int(byte, 2))

    return decoded_message

# Exemple d'utilisation
audio_file = "audio.wav"
message = extract_message_from_audio(audio_file)
print("Message extrait : ", message)
